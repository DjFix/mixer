{"version":3,"sources":["components/Button.jsx","components/ButtonGroup.jsx","components/Label.jsx","components/MixStrip.jsx","components/Fader/FaderKnob.jsx","components/Fader/FaderStrip.jsx","components/Fader/index.jsx","components/VUMeter.jsx","components/ChannelStrip.jsx","components/MasterStrip.jsx","Mixer.jsx","App.js","serviceWorker.js","index.js"],"names":["style","textAlign","cursor","props","className","children","columns","cols","display","gridTemplateColumns","gridColumnGap","gridRowGap","console","log","ButtonGroup","Button","size","Label","elems","i","push","key","renderMixButtons","FaderKnob","FaderStrip","VUMeter","Fader","label","channelStripContainer","backgroundColor","height","channelStrip","flexGrow","Mixer","state","this","renderChannelStrips","MasterStrip","React","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d608aa99.chunk.js","sourcesContent":["import React from 'react'\n\n// size: small medium large\nconst style = {\n  textAlign: 'center',\n  cursor: 'pointer'\n}\n\nexport default function (props) {\n  return (\n    <div style={{ ...style, ...props.style }} className='Button'>\n      {props.children}\n    </div>\n  )\n}\n","import React from 'react'\n\nexport default function (props) {\n  let columns = props.cols || 1\n  const style = {\n    display: 'grid',\n    gridTemplateColumns: `repeat(${columns}, 1fr)`,\n    gridColumnGap: '10px',\n    gridRowGap: '10px'\n  }\n\n  return <div style={style}>{props.children}</div>\n}\n","import React from 'react'\n\nconst style = {\n  textAlign: 'center'\n}\n\nexport default function (props) {\n  return <div style={style}>{props.children}</div>\n}\n","import React from 'react'\n\nimport Button from './Button'\nimport ButtonGroup from './ButtonGroup'\nimport Label from './Label'\n\nimport './MixStrip.scss'\n\nfunction renderMixButtons () {\n  // FIXME: REMOVE\n  let n_mixes = 16\n  // FIXME: REMOVE\n\n  let elems = []\n  for (let i = 1; i <= n_mixes; i++) {\n    elems.push(<Button key={i}>Mix {i}</Button>)\n  }\n  return <ButtonGroup cols={2}>{elems}</ButtonGroup>\n}\n\nexport default function () {\n  console.log()\n  return (\n    <div className='MixStrip'>\n      <div className='Bank_Main'>\n        <ButtonGroup cols='2'>\n          <Button>Inputs</Button>\n          <Button>DCA Groups</Button>\n          <Button>Mix/FX Masters</Button>\n          <Button>User</Button>\n        </ButtonGroup>\n        <Button size='large'>Main Mix</Button>\n      </div>\n      <div className='AuxSubMatrix'>\n        <Label>Aux/Sub/Matrix</Label>\n        {renderMixButtons()}\n        <ButtonGroup cols='2'>\n          <Button>FX A</Button>\n          <Button>FX B</Button>\n          <Button>FX C</Button>\n          <Button>FX D</Button>\n        </ButtonGroup>\n      </div>\n      <div className=''>\n        <Label>MIX SELECT</Label>\n      </div>\n    </div>\n  )\n}\n","import React from \"react\";\n\nexport default function() {\n\n\n    \n    return (\n      <div>\n      </div>\n    );\n  }\n  \n","import React from 'react';\n\nexport default function() {\n    return (\n      <div>\n      </div>\n    );\n  }\n  \n","import React from 'react';\nimport FaderKnob from \"./FaderKnob\";\nimport FaderStrip from \"./FaderStrip\"\n\nexport default function() {\n    return (\n      <div>\n<FaderKnob/>\n<FaderStrip/>\n      </div>\n    );\n  }\n  \n\n  ","import React from 'react';\n\nexport default function(props) {\n\n    // props.bars\n\n    return (\n      <div>\n\n      </div>\n    );\n  }\n  \n\n  ","import React from 'react'\nimport Button from './Button'\nimport Fader from './Fader/'\nimport VUMeter from './VUMeter'\nimport Label from './Label'\n\nimport './ChannelStrip.scss'\n\nexport default function (props) {\n  return (\n    <div style={props.style} className='ChannelStrip'>\n      <div className='Controls'>\n        <Button>Select</Button>\n        <Button>Solo</Button>\n        <Button>Mute</Button>\n        <VUMeter />\n      </div>\n      <div className='Fader'>\n        <Fader />\n      </div>\n      <div className='Label'>\n        <Label>{props.label}</Label>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport Button from './Button'\nimport Fader from './Fader/'\nimport Label from './Label'\n\nimport './ChannelStrip'\n\nexport default function (props) {\n  return (\n    <div style={props.style} className='ChannelStrip'>\n      <div className='Controls'>\n        <Button>Select</Button>\n        <Button>GEQ</Button>\n        <Button>Mute</Button>\n      </div>\n      <div className='Fader'>\n        <Fader />\n      </div>\n      <div className='Label'>\n        <Label>MASTER</Label>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport './Mixer.scss'\n\nimport MixStrip from './components/MixStrip'\nimport ChannelStrip from './components/ChannelStrip'\nimport MasterStrip from './components/MasterStrip'\n\nconst n_physicalChannelStrips = 16\n// const n_mixes = 16\n\nconst style = {\n  channelStripContainer: {\n    display: 'flex',\n    backgroundColor: 'red',\n    height: '100%'\n  },\n  channelStrip: {\n    flexGrow: 1\n  }\n}\n\nexport default class Mixer extends React.Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {}\n  }\n\n  renderChannelStrips () {\n    let elems = []\n    for (let i = 1; i <= n_physicalChannelStrips; i++) {\n      elems.push(<ChannelStrip style={style.channelStrip} key={i} label={i} />)\n    }\n    return elems\n  }\n\n  render () {\n    return (\n      <div className='Mixer'>\n        <div className='Buttons'>\n          <MixStrip />\n        </div>\n        <div className='LCDs'></div>\n        <div className='Channel-Strip'>\n          <div style={style.channelStripContainer}>\n            {this.renderChannelStrips()}\n          </div>\n        </div>\n        <div className='Master'>\n          <MasterStrip />\n        </div>\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport './App.css'\nimport Mixer from './Mixer'\n\nfunction App () {\n  return <Mixer />\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}